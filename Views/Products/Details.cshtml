@model ElectronicsStore.Models.Product

@{
    ViewData["Title"] = Model.Name;
}

<div class="container mt-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Trang chủ</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Products")">Sản phẩm</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Products", new { categoryId = Model.CategoryId })">@Model.Category.Name</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
        </ol>
    </nav>

    <div class="row">
        <!-- Product Images -->
        <div class="col-md-6">
            <div class="product-image-container">
                @if (!string.IsNullOrEmpty(Model.MainImageUrl))
                {
                    <img src="@Model.MainImageUrl" class="img-fluid rounded shadow" alt="@Model.Name" id="mainProductImage">
                }
                else
                {
                    <div class="d-flex align-items-center justify-content-center bg-light rounded shadow" style="height: 400px;">
                        <i class="fas fa-microchip fa-5x text-muted"></i>
                    </div>
                }
            </div>
        </div>

        <!-- Product Info -->
        <div class="col-md-6">
            <div class="product-info">
                <h1 class="h2 mb-3">@Model.Name</h1>
                
                <div class="mb-3">
                    <span class="badge bg-primary me-2">@Model.Category.Name</span>
                    <span class="badge bg-secondary">@Model.Brand.Name</span>
                </div>

                <div class="mb-3">
                    <span class="text-muted">SKU: </span>
                    <strong>@Model.SKU</strong>
                </div>

                <div class="price-section mb-4">
                    @if (Model.HasDiscount)
                    {
                        <div class="d-flex align-items-center">
                            <span class="h3 text-danger me-3">@Model.DisplayPrice.ToString("N0") ₫</span>
                            <span class="text-decoration-line-through text-muted">@Model.Price.ToString("N0") ₫</span>
                            <span class="badge bg-danger ms-2">-@Model.DiscountPercentage%</span>
                        </div>
                    }
                    else
                    {
                        <span class="h3 text-primary">@Model.Price.ToString("N0") ₫</span>
                    }
                </div>

                <div class="stock-info mb-4">
                    @if (Model.StockQuantity > 0)
                    {
                        <div class="d-flex align-items-center">
                            <i class="fas fa-check-circle text-success me-2"></i>
                            <span class="text-success">Còn hàng (@Model.StockQuantity sản phẩm)</span>
                        </div>
                    }
                    else
                    {
                        <div class="d-flex align-items-center">
                            <i class="fas fa-times-circle text-danger me-2"></i>
                            <span class="text-danger">Hết hàng</span>
                        </div>
                    }
                </div>

                @if (!string.IsNullOrEmpty(Model.ShortDescription))
                {
                    <div class="mb-4">
                        <h5>Mô tả ngắn</h5>
                        <p class="text-muted">@Model.ShortDescription</p>
                    </div>
                }

                <div class="action-buttons">
                    @if (Model.StockQuantity > 0)
                    {
                        <button class="btn btn-primary btn-lg me-3" onclick="addToCart(@Model.Id)">
                            <i class="fas fa-cart-plus me-2"></i>Thêm vào giỏ hàng
                        </button>
                    }
                    <button class="btn btn-outline-secondary" onclick="addToWishlist(@Model.Id)">
                        <i class="fas fa-heart me-2"></i>Yêu thích
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Details Tabs -->
    <div class="row mt-5">
        <div class="col-12">
            <ul class="nav nav-tabs" id="productTabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description" type="button" role="tab">
                        Mô tả chi tiết
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="specs-tab" data-bs-toggle="tab" data-bs-target="#specs" type="button" role="tab">
                        Thông số kỹ thuật
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab">
                        Đánh giá (@Model.Reviews.Count)
                    </button>
                </li>
            </ul>
            
            <div class="tab-content" id="productTabsContent">
                <div class="tab-pane fade show active" id="description" role="tabpanel">
                    <div class="p-4">
                        @if (!string.IsNullOrEmpty(Model.DetailedDescription))
                        {
                            @Html.Raw(Model.DetailedDescription.Replace("\n", "<br>"))
                        }
                        else
                        {
                            <p class="text-muted">Chưa có mô tả chi tiết cho sản phẩm này.</p>
                        }
                    </div>
                </div>
                
                <div class="tab-pane fade" id="specs" role="tabpanel">
                    <div class="p-4">
                        @if (!string.IsNullOrEmpty(Model.TechnicalSpecs))
                        {
                            <div class="table-responsive">
                                <table class="table table-striped">
                                    <tbody>
                                        @try
                                        {
                                            var specs = System.Text.Json.JsonSerializer.Deserialize<Dictionary<string, string>>(Model.TechnicalSpecs);
                                            @foreach (var spec in specs)
                                            {
                                                <tr>
                                                    <td class="fw-bold" style="width: 40%;">@spec.Key</td>
                                                    <td>@spec.Value</td>
                                                </tr>
                                            }
                                        }
                                        catch
                                        {
                                            <tr>
                                                <td colspan="2">
                                                    @Html.Raw(Model.TechnicalSpecs.Replace("\n", "<br>"))
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">Chưa có thông số kỹ thuật chi tiết.</p>
                        }
                    </div>
                </div>
                
                <div class="tab-pane fade" id="reviews" role="tabpanel">
                    <div class="p-4">
                        @if (Model.Reviews.Any())
                        {
                            @foreach (var review in Model.Reviews.Take(5))
                            {
                                <div class="review-item border-bottom pb-3 mb-3">
                                    <div class="d-flex justify-content-between">
                                        <strong>@review.CustomerName</strong>
                                        <div class="rating">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted")"></i>
                                            }
                                        </div>
                                    </div>
                                    <p class="mt-2 mb-0">@review.Comment</p>
                                    <small class="text-muted">@review.CreatedAt.ToString("dd/MM/yyyy")</small>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="text-muted">Chưa có đánh giá nào cho sản phẩm này.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Related Products -->
    @if (ViewBag.RelatedProducts != null && ((List<ElectronicsStore.Models.Product>)ViewBag.RelatedProducts).Any())
    {
        <div class="row mt-5">
            <div class="col-12">
                <h3>Sản phẩm liên quan</h3>
                <div class="row">
                    @foreach (var relatedProduct in (List<ElectronicsStore.Models.Product>)ViewBag.RelatedProducts)
                    {
                        <div class="col-md-3 mb-4">
                            <div class="card h-100">
                                <div class="card-img-top-container" style="height: 200px; overflow: hidden;">
                                    @if (!string.IsNullOrEmpty(relatedProduct.MainImageUrl))
                                    {
                                        <img src="@relatedProduct.MainImageUrl" class="card-img-top" alt="@relatedProduct.Name" style="height: 100%; object-fit: cover;">
                                    }
                                    else
                                    {
                                        <div class="d-flex align-items-center justify-content-center h-100 bg-light">
                                            <i class="fas fa-microchip fa-2x text-muted"></i>
                                        </div>
                                    }
                                </div>
                                <div class="card-body">
                                    <h6 class="card-title">@relatedProduct.Name</h6>
                                    <p class="text-muted small">@relatedProduct.Brand.Name</p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span class="text-primary fw-bold">@relatedProduct.DisplayPrice.ToString("N0") ₫</span>
                                        <a href="@Url.Action("Details", new { id = relatedProduct.Id })" class="btn btn-sm btn-outline-primary">Xem</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
</div>

<script>
function addToCart(productId) {
    $.post('@Url.Action("AddToCart", "Cart")', {
        productId: productId,
        quantity: 1
    }, function(response) {
        if (response.success) {
            alert(response.message);
            updateCartCount();
        } else {
            alert(response.message);
        }
    }).fail(function() {
        alert('Có lỗi xảy ra!');
    });
}

function addToWishlist(productId) {
    alert('Chức năng yêu thích sẽ được triển khai sau!');
}

function updateCartCount() {
    $.get('@Url.Action("GetCartCount", "Cart")', function(response) {
        $('.cart-count').text(response.count);
    });
}

function showNotification(message, type) {
    var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
    var notification = `
        <div class="alert ${alertClass} alert-dismissible fade show position-fixed" 
             style="top: 20px; right: 20px; z-index: 9999; min-width: 300px;" role="alert">
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    `;
    $('body').append(notification);
    
    // Tự động ẩn sau 3 giây
    setTimeout(function() {
        $('.alert').fadeOut();
    }, 3000);
}
</script>

<style>
.product-image-container img {
    max-height: 400px;
    width: 100%;
    object-fit: contain;
}

.review-item:last-child {
    border-bottom: none !important;
}

.rating .fa-star {
    font-size: 0.9rem;
}
</style>
